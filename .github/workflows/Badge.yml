on: 
  workflow_call:
    inputs:
      prev:
        type: string
        default: '[ "plain" ]'
      which: 
        type: string
        default: '[ { "text": "vaccination", "emoji": "üíâ" } , { "text": "case", "emoji": "ü¶†" } ]'
  workflow_dispatch:
    inputs:
      prev:
        type: string
        default: '[ "" ]'
      which: 
        type: string
        default: '[ { "text": "vaccination", "emoji": "üíâ" } , { "text": "case", "emoji": "ü¶†" } ]'
jobs:
  badge:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        which: ${{ fromJson((github.event.inputs || inputs).which) }}
        prev: ${{ fromJson((github.event.inputs || inputs).prev) }}
    timeout-minutes: 2
    steps:
    - uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
    - uses: actions/checkout@master
    - id: node-cache
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ github.repository }}-node-modules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ github.repository }}-node-modules-
    - if: steps.node-cache.outputs.cache-hit != 'true'
      run: yarn install
    - uses: actions/download-artifact@v2
      if: ${{ matrix.prev != '' }}
      with:
        name: artifact-${{ matrix.which.text }}
        path: ./
    - if: ${{ matrix.prev != '' }}
      run: tar -zxvf ${{ matrix.prev }}-${{ matrix.which.text }}.tar.gz
    - run: yarn badge:${{ matrix.which.text }}
    - run: tar -zcvf badge-${{ matrix.which.text }}.tar.gz ./badge/*
    - uses: actions/upload-artifact@v2
      with:
        name: artifact-${{ matrix.which.text }}
        path: badge-${{ matrix.which.text }}.tar.gz
    - uses: corcc/publish@node
      with:
        TZ: 'Asia/Seoul'
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        TASK_NAME: ‚¨ÜÔ∏è${{ matrix.which.emoji }}üìõ
